
CREATE TABLE Borrower (
    Rollno INT,
    Name VARCHAR(50),
    Date_of_Issue DATE,
    Status VARCHAR(50),
    Bookname VARCHAR(50),
    PRIMARY KEY (Rollno)
);

INSERT INTO Borrower VALUES (1, ‘Onkar’, '2024-01-24', 'Issued', 'Alchemist');
INSERT INTO Borrower VALUES (2, 'Aarti', '2024-02-10', 'Issued', 'Mrityunjay');
INSERT INTO Borrower VALUES (3, 'Rahul', '2024-03-15', 'Issued', 'Shriman Yogi');
INSERT INTO Borrower VALUES (4, 'Sakshi', '2024-04-01', 'Issued', 'Swami');
INSERT INTO Borrower VALUES (5, 'Vikram', '2024-05-20', 'Issued', 'Yugandhar');
INSERT INTO Borrower VALUES (6, 'Naina', '2024-06-30', 'Issued', 'Radheya');


CREATE TABLE Fine (
    Rollno INT,
    Rdate DATE,
    Amt INT,
    FOREIGN KEY (Rollno) REFERENCES Borrower(Rollno) ON DELETE CASCADE
);



DELIMITER $$

CREATE OR REPLACE PROCEDURE fineCalculator(IN roll INT)
BEGIN
    DECLARE issueDate DATE;
    DECLARE fine INT DEFAULT 0;
    DECLARE days INT;

    DECLARE EXIT HANDLER FOR SQLEXCEPTION
    BEGIN
        ROLLBACK;
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid roll number or other error';
    END;

    IF (roll < 0) THEN
        SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'Invalid roll number';
    END IF;

    SELECT Date_of_Issue INTO issueDate
    FROM Borrower
    WHERE Rollno = roll;

    SET days = DATEDIFF(CURDATE(), issueDate);

    IF (days >= 15 AND days <= 30) THEN
        SET fine = days * 5;
    ELSEIF (days > 30) THEN
        SET fine = days * 50;
    END IF;

    UPDATE Borrower
    SET Status = 'Returned'
    WHERE Rollno = roll;

    IF (fine IS NOT NULL) THEN
        INSERT INTO Fine (Rollno, Rdate, Amt) VALUES (roll, CURDATE(), fine);
    END IF;
END $$

DELIMITER ;




CALL fineCalculator(1);

DESC Fine;



